<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ include file="../../../templates/StructCS.ttinclude" #>
#region -- License Terms --
//
// NLiblet
//
// Copyright (C) 2011 FUJIWARA, Yusuke
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        http://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.
//
#endregion -- License Terms --

using System;
using System.IO;

namespace NLiblet.Async
{
<#
	this.PushIndent( "\t" );
	
	GetStructCodeGenerator(
		typeName: "StreamOperationProgressValue",
		fields: new FieldDeclaration []
		{
			new FieldDeclaration( "Stream", "Stream", false ) 
			{ 
				SummaryComment = "Get the underlying <see cref=\"Stream\" />.",
				ValueComment = "The underlying <see cref=\"Stream\" />.",
				Accessibility = MemberAccessibility.Private
			},
			new FieldDeclaration( "CurrentlyProcessed", "int", true ) 
			{ 
				SummaryComment = "Get the current progressed bytes from last progress reporting.",
				ValueComment = "The current progressed bytes from last progress reporting.",
			},
			new FieldDeclaration( "TotallyProcessed", "long", true ) 
			{ 
				SummaryComment = "Get the total progressed bytes from first progress reporting of this operation.", 
				ValueComment = "The total progressed bytes from first progress reporting of this operation.",
			},
		},
		typeSummary: "Represents async stream operation progress value.",
		typeOptions : ValueTypeOptions.Public,
		constructorAccessibility : MemberAccessibility.Assembly
	)();
	
	this.PopIndent();
#>
}